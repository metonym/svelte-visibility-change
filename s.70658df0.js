var app=function(){"use strict";function n(){}function t(n){return n()}function s(){return Object.create(null)}function e(n){n.forEach(t)}function a(n){return"function"==typeof n}function o(n,t){return n!=n?t==t:n!==t}function i(n,t){n.appendChild(t)}function p(n,t,s){n.insertBefore(t,s||null)}function c(n){n.parentNode.removeChild(n)}function l(n){return document.createElement(n)}function r(n){return document.createTextNode(n)}function u(){return r(" ")}function d(n,t,s){null==s?n.removeAttribute(t):n.getAttribute(t)!==s&&n.setAttribute(t,s)}let h;function g(n){h=n}function k(){if(!h)throw new Error("Function called outside component initialization");return h}function f(){const n=k();return(t,s)=>{const e=n.$$.callbacks[t];if(e){const a=function(n,t,s=!1){const e=document.createEvent("CustomEvent");return e.initCustomEvent(n,s,!1,t),e}(t,s);e.slice().forEach((t=>{t.call(n,a)}))}}}const v=[],b=[],m=[],$=[],y=Promise.resolve();let x=!1;function T(n){m.push(n)}function w(n){$.push(n)}let L=!1;const C=new Set;function M(){if(!L){L=!0;do{for(let n=0;n<v.length;n+=1){const t=v[n];g(t),H(t.$$)}for(g(null),v.length=0;b.length;)b.pop()();for(let n=0;n<m.length;n+=1){const t=m[n];C.has(t)||(C.add(t),t())}m.length=0}while(v.length);for(;$.length;)$.pop()();x=!1,L=!1,C.clear()}}function H(n){if(null!==n.fragment){n.update(),e(n.before_update);const t=n.dirty;n.dirty=[-1],n.fragment&&n.fragment.p(n.ctx,t),n.after_update.forEach(T)}}const _=new Set;function E(n,t){n&&n.i&&(_.delete(n),n.i(t))}function A(n,t,s,e){if(n&&n.o){if(_.has(n))return;_.add(n),undefined.c.push((()=>{_.delete(n),e&&(s&&n.d(1),e())})),n.o(t)}}function P(n,t,s){const e=n.$$.props[t];void 0!==e&&(n.$$.bound[e]=s,s(n.$$.ctx[e]))}function S(n){n&&n.c()}function j(n,s,o,i){const{fragment:p,on_mount:c,on_destroy:l,after_update:r}=n.$$;p&&p.m(s,o),i||T((()=>{const s=c.map(t).filter(a);l?l.push(...s):e(s),n.$$.on_mount=[]})),r.forEach(T)}function I(n,t){const s=n.$$;null!==s.fragment&&(e(s.on_destroy),s.fragment&&s.fragment.d(t),s.on_destroy=s.fragment=null,s.ctx=[])}function N(n,t){-1===n.$$.dirty[0]&&(v.push(n),x||(x=!0,y.then(M)),n.$$.dirty.fill(0)),n.$$.dirty[t/31|0]|=1<<t%31}function q(t,a,o,i,p,l,r,u=[-1]){const d=h;g(t);const k=t.$$={fragment:null,ctx:null,props:l,update:n,not_equal:p,bound:s(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(a.context||(d?d.$$.context:[])),callbacks:s(),dirty:u,skip_bound:!1,root:a.target||d.$$.root};r&&r(k.root);let f=!1;if(k.ctx=o?o(t,a.props||{},((n,s,...e)=>{const a=e.length?e[0]:s;return k.ctx&&p(k.ctx[n],k.ctx[n]=a)&&(!k.skip_bound&&k.bound[n]&&k.bound[n](a),f&&N(t,n)),s})):[],k.update(),f=!0,e(k.before_update),k.fragment=!!i&&i(k.ctx),a.target){if(a.hydrate){const n=function(n){return Array.from(n.childNodes)}(a.target);k.fragment&&k.fragment.l(n),n.forEach(c)}else k.fragment&&k.fragment.c();a.intro&&E(t.$$.fragment),j(t,a.target,a.anchor,a.customElement),M()}g(d)}class V{$destroy(){I(this,1),this.$destroy=n}$on(n,t){const s=this.$$.callbacks[n]||(this.$$.callbacks[n]=[]);return s.push(t),()=>{const n=s.indexOf(t);-1!==n&&s.splice(n,1)}}$set(n){var t;this.$$set&&(t=n,0!==Object.keys(t).length)&&(this.$$.skip_bound=!0,this.$$set(n),this.$$.skip_bound=!1)}}function D(n,t,s){let{state:e}=t,{visible:a=!1}=t,{hidden:o=!1}=t;const i=f();function p(){s(0,e=document.visibilityState),i("change",{state:e,visible:a,hidden:o})}var c;return c=()=>(s(0,e=document.visibilityState),document.addEventListener("visibilitychange",p),()=>{document.removeEventListener("visibilitychange",p)}),k().$$.on_mount.push(c),n.$$set=n=>{"state"in n&&s(0,e=n.state),"visible"in n&&s(1,a=n.visible),"hidden"in n&&s(2,o=n.hidden)},n.$$.update=()=>{1&n.$$.dirty&&s(1,a="visible"===e),1&n.$$.dirty&&s(2,o="hidden"===e),2&n.$$.dirty&&a&&i("visible"),4&n.$$.dirty&&o&&i("hidden")},[e,a,o]}var U=class extends V{constructor(n){super(),q(this,n,D,null,o,{state:0,visible:1,hidden:2})}};function F(n,t,s){const e=n.slice();return e[10]=t[s],e}function G(n){let t,s,e,a,o=n[10]+"";return{c(){t=r(o),s=u(),e=l("br"),a=u()},m(n,o){p(n,t,o),p(n,s,o),p(n,e,o),p(n,a,o)},p(n,s){8&s&&o!==(o=n[10]+"")&&function(n,t){t=""+t,n.wholeText!==t&&(n.data=t)}(t,o)},d(n){n&&c(t),n&&c(s),n&&c(e),n&&c(a)}}}function O(n){let t,s,e,a,o,r,h,g,k,f,v,m,$,y,x,T,L,C,M,H,_,N,q,V,D,O,B,z,W,Y,R,J,K,Q,X,Z,nn,tn,sn,en,an,on,pn,cn,ln,rn,un,dn,hn,gn,kn,fn,vn,bn,mn,$n,yn,xn,Tn,wn,Ln,Cn,Mn,Hn,_n,En,An,Pn,Sn,jn,In,Nn,qn,Vn,Dn,Un,Fn,Gn,On,Bn,zn,Wn,Yn,Rn,Jn,Kn,Qn,Xn,Zn,nt,tt,st,et,at,ot,it,pt,ct,lt,rt;function ut(t){n[4](t)}let dt={};function ht(t){n[5](t)}function gt(t){n[6](t)}void 0!==n[0]&&(dt.state=n[0]),cn=new U({props:dt}),b.push((()=>P(cn,"state",ut)));let kt={};void 0!==n[1]&&(kt.visible=n[1]),void 0!==n[2]&&(kt.hidden=n[2]),vn=new U({props:kt}),b.push((()=>P(vn,"visible",ht))),b.push((()=>P(vn,"hidden",gt))),Mn=new U({}),Mn.$on("visible",n[7]),Mn.$on("hidden",n[8]);let ft=n[3],vt=[];for(let t=0;t<ft.length;t+=1)vt[t]=G(F(n,ft,t));return Vn=new U({}),Vn.$on("change",n[9]),{c(){t=l("main"),s=l("h1"),s.textContent="svelte-visibility-change",e=u(),a=l("p"),a.innerHTML='<a href="https://npmjs.com/package/svelte-visibility-change"><img src="https://img.shields.io/npm/v/svelte-visibility-change.svg?style=for-the-badge&amp;color=%23ff3e00" alt="NPM"/></a>',o=u(),r=l("blockquote"),r.innerHTML='<p>Detect browser page visibility changes using the <a href="https://developer.mozilla.org/en-US/docs/Web/API/Page_Visibility_API">Page Visibility API</a></p>',h=u(),g=l("p"),g.innerHTML='<a href="https://github.com/metonym/svelte-visibility-change">GitHub repo</a>',k=u(),f=l("p"),f.textContent="Use this utility component to declaratively listen to browser page visibility changes.",v=u(),m=l("p"),m.textContent="The visibility state of a page can either be “visible” or “hidden.”",$=u(),y=l("p"),y.innerHTML="<strong>Use cases</strong>",x=u(),T=l("ul"),T.innerHTML="<li>make a network request when the browser tab is focused</li> \n<li>play/pause audiot when the browser tab is focused or blurred</li> \n<li>pause expensive background computations when the tab is blurred</li>",L=u(),C=l("p"),C.innerHTML='Try it in the <a href="https://svelte.dev/repl/a4b8bdb782514baaa7fa1cb26313b303">Svelte REPL</a>.',M=u(),H=l("hr"),_=u(),N=l("p"),N.innerHTML="<strong>Table of Contents</strong>",q=l("ul"),q.innerHTML='<li><a href="#installation">Installation</a></li> \n<li><a href="#usage">Usage</a></li> \n<ul><li><a href="#basic">Basic</a></li> \n<li><a href="#visible-%2F-hidden">visible / hidden</a></li> \n<li><a href="#on%3Avisible-%2F-on%3Ahidden">on:visible / on:hidden</a></li> \n<li><a href="#on%3Achange">on:change</a></li> \n</ul><li><a href="#api">API</a></li> \n<ul><li><a href="#props">Props</a></li> \n<li><a href="#dispatched-events">Dispatched Events</a></li> \n</ul><li><a href="#typescript">TypeScript</a></li> \n<li><a href="#changelog">Changelog</a></li> \n<li><a href="#license">License</a></li>',V=u(),D=l("h2"),D.textContent="Installation",O=u(),B=l("p"),B.innerHTML="<strong>Yarn</strong>",z=u(),W=l("pre"),Y=u(),R=l("p"),R.innerHTML="<strong>NPM</strong>",J=u(),K=l("pre"),Q=u(),X=l("h2"),X.textContent="Usage",Z=u(),nn=l("h3"),nn.textContent="Basic",tn=u(),sn=l("p"),sn.innerHTML="Bind to the <code>state</code> prop to determine if the current tab is currently visible or hidden.",en=u(),an=l("p"),an.innerHTML="In this live demo, switch to a different tab in the <em>same browser window</em>. The page title should change from “visible” to “hidden.”",on=u(),pn=l("div"),S(cn.$$.fragment),rn=l("pre"),un=u(),dn=l("h3"),dn.textContent="visible / hidden",hn=u(),gn=l("p"),gn.innerHTML="You can also bind to the boolean <code>visible</code> and <code>hidden</code> props.",kn=u(),fn=l("div"),S(vn.$$.fragment),$n=l("pre"),yn=u(),xn=l("h3"),xn.textContent="on:visible / on:hidden",Tn=u(),wn=l("p"),wn.innerHTML="An alternative to binding to props is to listen to the <code>on:visible</code> and <code>on:hidden</code> dispatched events.",Ln=u(),Cn=l("div"),S(Mn.$$.fragment),Hn=u();for(let n=0;n<vt.length;n+=1)vt[n].c();_n=l("pre"),En=u(),An=l("h3"),An.textContent="on:change",Pn=u(),Sn=l("p"),Sn.innerHTML='This component dispatches an <code>on:change</code> event whenever a <a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/visibilitychange_event">visibilitychange</a> event occurs.',jn=u(),In=l("p"),In.innerHTML="<strong>Note:</strong> unlike <code>on:visible</code>, this event only fires when the page visibility changes <em>after the component has mounted.</em>",Nn=u(),qn=l("div"),S(Vn.$$.fragment),Dn=l("pre"),Un=u(),Fn=l("h2"),Fn.textContent="API",Gn=u(),On=l("h3"),On.textContent="Props",Bn=u(),zn=l("table"),zn.innerHTML='<thead><tr><th style="text-align:left">Prop name</th> \n<th style="text-align:left">Value</th></tr></thead> \n<tbody><tr><td style="text-align:left">state</td> \n<td style="text-align:left"><code>&quot;visible&quot;</code> or <code>&quot;hidden&quot;</code> (default: <code>undefined</code>)</td></tr> \n<tr><td style="text-align:left">visible</td> \n<td style="text-align:left"><code>boolean</code> (default: <code>false</code>)</td></tr> \n<tr><td style="text-align:left">hidden</td> \n<td style="text-align:left"><code>boolean</code> (default: <code>false</code>)</td></tr></tbody>',Wn=u(),Yn=l("h3"),Yn.textContent="Dispatched Events",Rn=u(),Jn=l("ul"),Jn.innerHTML="<li><strong>on:visible</strong>: fired if the page is visible</li> \n<li><strong>on:hidden</strong>: fired if the page visibility is hidden</li> \n<li><strong>on:change</strong>: fired when a page visibility event occurs, after the initial mount</li>",Kn=u(),Qn=l("h2"),Qn.textContent="TypeScript",Xn=u(),Zn=l("p"),Zn.textContent="Svelte version 3.31 or greater is required to use this component with TypeScript.",nt=u(),tt=l("p"),tt.innerHTML='TypeScript definitions are located in the <a href="https://github.com/metonym/svelte-visibility-change/tree/master/types/">types folder</a>.',st=u(),et=l("h2"),et.textContent="Changelog",at=u(),ot=l("p"),ot.innerHTML='<a href="https://github.com/metonym/svelte-visibility-change/tree/master/CHANGELOG.md">CHANGELOG.md</a>',it=u(),pt=l("h2"),pt.textContent="License",ct=u(),lt=l("p"),lt.innerHTML='<a href="https://github.com/metonym/svelte-visibility-change/tree/master/LICENSE">MIT</a>',d(s,"id","svelte-visibility-change"),d(D,"id","installation"),d(W,"class","language-bash"),d(K,"class","language-bash"),d(X,"id","usage"),d(nn,"id","basic"),d(pn,"class","code-fence"),d(rn,"class","language-svelte"),d(rn,"data-svelte",""),d(dn,"id","visible-%2F-hidden"),d(fn,"class","code-fence"),d($n,"class","language-svelte"),d($n,"data-svelte",""),d(xn,"id","on%3Avisible-%2F-on%3Ahidden"),d(Cn,"class","code-fence"),d(_n,"class","language-svelte"),d(_n,"data-svelte",""),d(An,"id","on%3Achange"),d(qn,"class","code-fence"),d(Dn,"class","language-svelte"),d(Dn,"data-svelte",""),d(Fn,"id","api"),d(On,"id","props"),d(Yn,"id","dispatched-events"),d(Qn,"id","typescript"),d(et,"id","changelog"),d(pt,"id","license"),d(t,"class","markdown-body")},m(n,c){p(n,t,c),i(t,s),i(t,e),i(t,a),i(t,o),i(t,r),i(t,h),i(t,g),i(t,k),i(t,f),i(t,v),i(t,m),i(t,$),i(t,y),i(t,x),i(t,T),i(t,L),i(t,C),i(t,M),i(t,H),i(t,_),i(t,N),i(t,q),i(t,V),i(t,D),i(t,O),i(t,B),i(t,z),i(t,W),W.innerHTML='<span class="token function">yarn</span> <span class="token function">add</span> -D svelte-visibility-change\n',i(t,Y),i(t,R),i(t,J),i(t,K),K.innerHTML='<span class="token function">npm</span> i -D svelte-visibility-change\n',i(t,Q),i(t,X),i(t,Z),i(t,nn),i(t,tn),i(t,sn),i(t,en),i(t,an),i(t,on),i(t,pn),j(cn,pn,null),i(t,rn),rn.innerHTML='<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">import</span> VisibilityChange <span class="token keyword">from</span> <span class="token string">"svelte-visibility-change"</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">let</span> state<span class="token punctuation">;</span> <span class="token comment">// "visible" | "hidden"</span>\n\n  $<span class="token operator">:</span> document<span class="token punctuation">.</span>title <span class="token operator">=</span> state<span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>VisibilityChange</span> <span class="token attr-name"><span class="token namespace">bind:</span>state</span> <span class="token punctuation">/></span></span>\n',i(t,un),i(t,dn),i(t,hn),i(t,gn),i(t,kn),i(t,fn),j(vn,fn,null),i(t,$n),$n.innerHTML='<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">let</span> visible<span class="token punctuation">;</span> <span class="token comment">// boolean</span>\n  <span class="token keyword">let</span> hidden<span class="token punctuation">;</span> <span class="token comment">// boolean</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>VisibilityChange</span> <span class="token attr-name"><span class="token namespace">bind:</span>visible</span> <span class="token attr-name"><span class="token namespace">bind:</span>hidden</span> <span class="token punctuation">/></span></span>\n',i(t,yn),i(t,xn),i(t,Tn),i(t,wn),i(t,Ln),i(t,Cn),j(Mn,Cn,null),i(Cn,Hn);for(let n=0;n<vt.length;n+=1)vt[n].m(Cn,null);i(t,_n),_n.innerHTML='<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">let</span> events <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>VisibilityChange</span>\n  <span class="token attr-name"><span class="token namespace">on:</span>visible=</span><span class="token language-javascript"><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>events <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>events<span class="token punctuation">,</span> <span class="token string">"on:visible"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n  <span class="token attr-name"><span class="token namespace">on:</span>hidden=</span><span class="token language-javascript"><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>events <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>events<span class="token punctuation">,</span> <span class="token string">"on:hidden"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n<span class="token punctuation">/></span></span>\n\n<span class="token each"><span class="token punctuation">{</span><span class="token keyword">#each</span> <span class="token language-javascript">events </span><span class="token keyword">as</span> <span class="token language-javascript">event<span class="token punctuation">}</span></span></span>\n  <span class="token language-javascript"><span class="token punctuation">{</span>event<span class="token punctuation">}</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>\n<span class="token each"><span class="token punctuation">{</span><span class="token keyword">/each</span><span class="token punctuation">}</span></span>\n',i(t,En),i(t,An),i(t,Pn),i(t,Sn),i(t,jn),i(t,In),i(t,Nn),i(t,qn),j(Vn,qn,null),i(t,Dn),Dn.innerHTML='<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>VisibilityChange</span>\n  <span class="token attr-name"><span class="token namespace">on:</span>change=</span><span class="token language-javascript"><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> detail <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>detail<span class="token punctuation">.</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// "visible" | "hidden"</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>detail<span class="token punctuation">.</span>visible<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// boolean</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>detail<span class="token punctuation">.</span>hidden<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// boolean</span>\n  <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n<span class="token punctuation">/></span></span>\n',i(t,Un),i(t,Fn),i(t,Gn),i(t,On),i(t,Bn),i(t,zn),i(t,Wn),i(t,Yn),i(t,Rn),i(t,Jn),i(t,Kn),i(t,Qn),i(t,Xn),i(t,Zn),i(t,nt),i(t,tt),i(t,st),i(t,et),i(t,at),i(t,ot),i(t,it),i(t,pt),i(t,ct),i(t,lt),rt=!0},p(n,[t]){const s={};!ln&&1&t&&(ln=!0,s.state=n[0],w((()=>ln=!1))),cn.$set(s);const e={};if(!bn&&2&t&&(bn=!0,e.visible=n[1],w((()=>bn=!1))),!mn&&4&t&&(mn=!0,e.hidden=n[2],w((()=>mn=!1))),vn.$set(e),8&t){let s;for(ft=n[3],s=0;s<ft.length;s+=1){const e=F(n,ft,s);vt[s]?vt[s].p(e,t):(vt[s]=G(e),vt[s].c(),vt[s].m(Cn,null))}for(;s<vt.length;s+=1)vt[s].d(1);vt.length=ft.length}},i(n){rt||(E(cn.$$.fragment,n),E(vn.$$.fragment,n),E(Mn.$$.fragment,n),E(Vn.$$.fragment,n),rt=!0)},o(n){A(cn.$$.fragment,n),A(vn.$$.fragment,n),A(Mn.$$.fragment,n),A(Vn.$$.fragment,n),rt=!1},d(n){n&&c(t),I(cn),I(vn),I(Mn),function(n,t){for(let s=0;s<n.length;s+=1)n[s]&&n[s].d(t)}(vt,n),I(Vn)}}}function B(n,t,s){let e,a,o,i=[];return n.$$.update=()=>{1&n.$$.dirty&&(document.title=e)},[e,a,o,i,function(n){e=n,s(0,e)},function(n){a=n,s(1,a)},function(n){o=n,s(2,o)},()=>s(3,i=[...i,"on:visible"]),()=>s(3,i=[...i,"on:hidden"]),({detail:n})=>{console.log(n.state),console.log(n.visible),console.log(n.hidden)}]}return new class extends V{constructor(n){super(),q(this,n,B,O,o,{})}}({target:document.body})}();
