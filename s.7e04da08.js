var app=function(){"use strict";function n(){}function t(n){return n()}function s(){return Object.create(null)}function a(n){n.forEach(t)}function e(n){return"function"==typeof n}function o(n,t){return n!=n?t==t:n!==t}function i(n,t){n.appendChild(t)}function p(n,t,s){n.insertBefore(t,s||null)}function c(n){n.parentNode.removeChild(n)}function l(n){return document.createElement(n)}function r(n){return document.createTextNode(n)}function u(){return r(" ")}function d(n,t,s){null==s?n.removeAttribute(t):n.getAttribute(t)!==s&&n.setAttribute(t,s)}let h;function g(n){h=n}function k(){if(!h)throw new Error("Function called outside component initialization");return h}function f(){const n=k();return(t,s)=>{const a=n.$$.callbacks[t];if(a){const e=function(n,t,s=!1){const a=document.createEvent("CustomEvent");return a.initCustomEvent(n,s,!1,t),a}(t,s);a.slice().forEach((t=>{t.call(n,e)}))}}}const b=[],v=[],m=[],y=[],$=Promise.resolve();let x=!1;function w(n){m.push(n)}let T=!1;const L=new Set;function C(){if(!T){T=!0;do{for(let n=0;n<b.length;n+=1){const t=b[n];g(t),M(t.$$)}for(g(null),b.length=0;v.length;)v.pop()();for(let n=0;n<m.length;n+=1){const t=m[n];L.has(t)||(L.add(t),t())}m.length=0}while(b.length);for(;y.length;)y.pop()();x=!1,T=!1,L.clear()}}function M(n){if(null!==n.fragment){n.update(),a(n.before_update);const t=n.dirty;n.dirty=[-1],n.fragment&&n.fragment.p(n.ctx,t),n.after_update.forEach(w)}}const H=new Set;function _(n,t){n&&n.i&&(H.delete(n),n.i(t))}function E(n,t,s,a){if(n&&n.o){if(H.has(n))return;H.add(n),undefined.c.push((()=>{H.delete(n),a&&(s&&n.d(1),a())})),n.o(t)}}function A(n){n&&n.c()}function P(n,s,o,i){const{fragment:p,on_mount:c,on_destroy:l,after_update:r}=n.$$;p&&p.m(s,o),i||w((()=>{const s=c.map(t).filter(e);l?l.push(...s):a(s),n.$$.on_mount=[]})),r.forEach(w)}function S(n,t){const s=n.$$;null!==s.fragment&&(a(s.on_destroy),s.fragment&&s.fragment.d(t),s.on_destroy=s.fragment=null,s.ctx=[])}function j(n,t){-1===n.$$.dirty[0]&&(b.push(n),x||(x=!0,$.then(C)),n.$$.dirty.fill(0)),n.$$.dirty[t/31|0]|=1<<t%31}function I(t,e,o,i,p,l,r,u=[-1]){const d=h;g(t);const k=t.$$={fragment:null,ctx:null,props:l,update:n,not_equal:p,bound:s(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(e.context||(d?d.$$.context:[])),callbacks:s(),dirty:u,skip_bound:!1,root:e.target||d.$$.root};r&&r(k.root);let f=!1;if(k.ctx=o?o(t,e.props||{},((n,s,...a)=>{const e=a.length?a[0]:s;return k.ctx&&p(k.ctx[n],k.ctx[n]=e)&&(!k.skip_bound&&k.bound[n]&&k.bound[n](e),f&&j(t,n)),s})):[],k.update(),f=!0,a(k.before_update),k.fragment=!!i&&i(k.ctx),e.target){if(e.hydrate){const n=function(n){return Array.from(n.childNodes)}(e.target);k.fragment&&k.fragment.l(n),n.forEach(c)}else k.fragment&&k.fragment.c();e.intro&&_(t.$$.fragment),P(t,e.target,e.anchor,e.customElement),C()}g(d)}class V{$destroy(){S(this,1),this.$destroy=n}$on(n,t){const s=this.$$.callbacks[n]||(this.$$.callbacks[n]=[]);return s.push(t),()=>{const n=s.indexOf(t);-1!==n&&s.splice(n,1)}}$set(n){var t;this.$$set&&(t=n,0!==Object.keys(t).length)&&(this.$$.skip_bound=!0,this.$$set(n),this.$$.skip_bound=!1)}}function N(n,t,s){let{state:a}=t,{visible:e=!1}=t,{hidden:o=!1}=t;const i=f();function p(){s(0,a=document.visibilityState),i("change",{state:a,visible:e,hidden:o})}var c;return c=()=>(s(0,a=document.visibilityState),document.addEventListener("visibilitychange",p),()=>{document.removeEventListener("visibilitychange",p)}),k().$$.on_mount.push(c),n.$$set=n=>{"state"in n&&s(0,a=n.state),"visible"in n&&s(1,e=n.visible),"hidden"in n&&s(2,o=n.hidden)},n.$$.update=()=>{1&n.$$.dirty&&s(1,e="visible"===a),1&n.$$.dirty&&s(2,o="hidden"===a),2&n.$$.dirty&&e&&i("visible"),4&n.$$.dirty&&o&&i("hidden")},[a,e,o]}var q=class extends V{constructor(n){super(),I(this,n,N,null,o,{state:0,visible:1,hidden:2})}};function D(n,t,s){const a=n.slice();return a[5]=t[s],a}function U(n){let t,s,a,e,o=n[5]+"";return{c(){t=r(o),s=u(),a=l("br"),e=u()},m(n,o){p(n,t,o),p(n,s,o),p(n,a,o),p(n,e,o)},p(n,s){2&s&&o!==(o=n[5]+"")&&function(n,t){t=""+t,n.wholeText!==t&&(n.data=t)}(t,o)},d(n){n&&c(t),n&&c(s),n&&c(a),n&&c(e)}}}function F(n){let t,s,a,e,o,r,h,g,k,f,b,m,$,x,w,T,L,C,M,H,j,I,V,N,F,G,O,B,z,W,Y,R,J,K,Q,X,Z,nn,tn,sn,an,en,on,pn,cn,ln,rn,un,dn,hn,gn,kn,fn,bn,vn,mn,yn,$n,xn,wn,Tn,Ln,Cn,Mn,Hn,_n,En,An,Pn,Sn,jn,In,Vn,Nn,qn,Dn,Un,Fn,Gn,On,Bn,zn,Wn,Yn,Rn,Jn,Kn,Qn,Xn,Zn,nt,tt,st,at;function et(t){n[2](t)}let ot={};void 0!==n[0]&&(ot.state=n[0]),pn=new q({props:ot}),v.push((()=>function(n,t,s){const a=n.$$.props[t];void 0!==a&&(n.$$.bound[a]=s,s(n.$$.ctx[a]))}(pn,"state",et))),xn=new q({}),xn.$on("visible",n[3]),xn.$on("hidden",n[4]);let it=n[1],pt=[];for(let t=0;t<it.length;t+=1)pt[t]=U(D(n,it,t));return{c(){t=l("main"),s=l("h1"),s.textContent="svelte-visibility-change",a=u(),e=l("p"),e.innerHTML='<a href="https://npmjs.com/package/svelte-visibility-change"><img src="https://img.shields.io/npm/v/svelte-visibility-change.svg?style=for-the-badge&amp;color=%23ff3e00" alt="NPM"/></a>',o=u(),r=l("blockquote"),r.innerHTML='<p>Detect browser page visibility changes using the <a href="https://developer.mozilla.org/en-US/docs/Web/API/Page_Visibility_API">Page Visibility API</a></p>',h=u(),g=l("p"),g.innerHTML='<a href="https://github.com/metonym/svelte-visibility-change">GitHub repo</a>',k=u(),f=l("p"),f.textContent="Use this utility component to declaratively listen to browser page visibility changes.",b=u(),m=l("p"),m.textContent="The visibility state of a page can either be “visible” or “hidden.”",$=u(),x=l("p"),x.innerHTML="<strong>Use cases</strong>",w=u(),T=l("ul"),T.innerHTML="<li>make a network request when the browser tab is focused</li> \n<li>play/pause audiot when the browser tab is focused or blurred</li> \n<li>pause expensive background computations when the tab is blurred</li>",L=u(),C=l("p"),C.innerHTML='Try it in the <a href="https://svelte.dev/repl/a4b8bdb782514baaa7fa1cb26313b303">Svelte REPL</a>.',M=u(),H=l("hr"),j=u(),I=l("p"),I.innerHTML="<strong>Table of Contents</strong>",V=l("ul"),V.innerHTML='<li><a href="#installation">Installation</a></li> \n<li><a href="#usage">Usage</a></li> \n<ul><li><a href="#basic">Basic</a></li> \n<li><a href="#visible-%2F-hidden">visible / hidden</a></li> \n<li><a href="#on%3Avisible-%2F-on%3Ahidden">on:visible / on:hidden</a></li> \n<li><a href="#on%3Achange">on:change</a></li> \n</ul><li><a href="#api">API</a></li> \n<ul><li><a href="#props">Props</a></li> \n<li><a href="#dispatched-events">Dispatched Events</a></li> \n</ul><li><a href="#typescript">TypeScript</a></li> \n<li><a href="#changelog">Changelog</a></li> \n<li><a href="#license">License</a></li>',N=u(),F=l("h2"),F.textContent="Installation",G=u(),O=l("p"),O.innerHTML="<strong>Yarn</strong>",B=u(),z=l("pre"),W=u(),Y=l("p"),Y.innerHTML="<strong>NPM</strong>",R=u(),J=l("pre"),K=u(),Q=l("h2"),Q.textContent="Usage",X=u(),Z=l("h3"),Z.textContent="Basic",nn=u(),tn=l("p"),tn.innerHTML="Bind to the <code>state</code> prop to determine if the current tab is currently visible or hidden.",sn=u(),an=l("p"),an.innerHTML="In this live demo, switch to a different tab in the <em>same browser window</em>. The page title should change from “visible” to “hidden.”",en=u(),on=l("div"),A(pn.$$.fragment),ln=l("pre"),rn=u(),un=l("h3"),un.textContent="visible / hidden",dn=u(),hn=l("p"),hn.innerHTML="You can also bind to the boolean <code>visible</code> and <code>hidden</code> props.",gn=u(),kn=l("pre"),fn=u(),bn=l("h3"),bn.textContent="on:visible / on:hidden",vn=u(),mn=l("p"),mn.innerHTML="An alternative to binding to props is to listen to the <code>on:visible</code> and <code>on:hidden</code> dispatched events.",yn=u(),$n=l("div"),A(xn.$$.fragment),wn=u();for(let n=0;n<pt.length;n+=1)pt[n].c();Tn=l("pre"),Ln=u(),Cn=l("h3"),Cn.textContent="on:change",Mn=u(),Hn=l("p"),Hn.innerHTML='This component dispatches an <code>on:change</code> event whenever a <a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/visibilitychange_event">visibilitychange</a> event occurs.',_n=u(),En=l("p"),En.innerHTML="<strong>Note:</strong> unlike <code>on:visible</code>, this event only fires when the page visibility changes <em>after the component has mounted.</em>",An=u(),Pn=l("pre"),Sn=u(),jn=l("h2"),jn.textContent="API",In=u(),Vn=l("h3"),Vn.textContent="Props",Nn=u(),qn=l("table"),qn.innerHTML='<thead><tr><th style="text-align:left">Prop name</th> \n<th style="text-align:left">Value</th></tr></thead> \n<tbody><tr><td style="text-align:left">state</td> \n<td style="text-align:left"><code>&quot;visible&quot;</code> or <code>&quot;hidden&quot;</code> (default: <code>undefined</code>)</td></tr> \n<tr><td style="text-align:left">visible</td> \n<td style="text-align:left"><code>boolean</code> (default: <code>false</code>)</td></tr> \n<tr><td style="text-align:left">hidden</td> \n<td style="text-align:left"><code>boolean</code> (default: <code>false</code>)</td></tr></tbody>',Dn=u(),Un=l("h3"),Un.textContent="Dispatched Events",Fn=u(),Gn=l("ul"),Gn.innerHTML="<li><strong>on:visible</strong>: fired if the page is visible</li> \n<li><strong>on:hidden</strong>: fired if the page visibility is hidden</li> \n<li><strong>on:change</strong>: fired when a page visibility event occurs, after the initial mount</li>",On=u(),Bn=l("h2"),Bn.textContent="TypeScript",zn=u(),Wn=l("p"),Wn.textContent="Svelte version 3.31 or greater is required to use this component with TypeScript.",Yn=u(),Rn=l("p"),Rn.innerHTML='TypeScript definitions are located in the <a href="https://github.com/metonym/svelte-visibility-change/tree/master/types/">types folder</a>.',Jn=u(),Kn=l("h2"),Kn.textContent="Changelog",Qn=u(),Xn=l("p"),Xn.innerHTML='<a href="https://github.com/metonym/svelte-visibility-change/tree/master/CHANGELOG.md">CHANGELOG.md</a>',Zn=u(),nt=l("h2"),nt.textContent="License",tt=u(),st=l("p"),st.innerHTML='<a href="https://github.com/metonym/svelte-visibility-change/tree/master/LICENSE">MIT</a>',d(s,"id","svelte-visibility-change"),d(F,"id","installation"),d(z,"class","language-bash"),d(J,"class","language-bash"),d(Q,"id","usage"),d(Z,"id","basic"),d(on,"class","code-fence"),d(ln,"class","language-svelte"),d(ln,"data-svelte",""),d(un,"id","visible-%2F-hidden"),d(kn,"class","language-svelte"),d(bn,"id","on%3Avisible-%2F-on%3Ahidden"),d($n,"class","code-fence"),d(Tn,"class","language-svelte"),d(Tn,"data-svelte",""),d(Cn,"id","on%3Achange"),d(Pn,"class","language-svelte"),d(jn,"id","api"),d(Vn,"id","props"),d(Un,"id","dispatched-events"),d(Bn,"id","typescript"),d(Kn,"id","changelog"),d(nt,"id","license"),d(t,"class","markdown-body")},m(n,c){p(n,t,c),i(t,s),i(t,a),i(t,e),i(t,o),i(t,r),i(t,h),i(t,g),i(t,k),i(t,f),i(t,b),i(t,m),i(t,$),i(t,x),i(t,w),i(t,T),i(t,L),i(t,C),i(t,M),i(t,H),i(t,j),i(t,I),i(t,V),i(t,N),i(t,F),i(t,G),i(t,O),i(t,B),i(t,z),z.innerHTML='<span class="token function">yarn</span> <span class="token function">add</span> -D svelte-visibility-change\n',i(t,W),i(t,Y),i(t,R),i(t,J),J.innerHTML='<span class="token function">npm</span> i -D svelte-visibility-change\n',i(t,K),i(t,Q),i(t,X),i(t,Z),i(t,nn),i(t,tn),i(t,sn),i(t,an),i(t,en),i(t,on),P(pn,on,null),i(t,ln),ln.innerHTML='<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">import</span> VisibilityChange <span class="token keyword">from</span> <span class="token string">"svelte-visibility-change"</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">let</span> state<span class="token punctuation">;</span> <span class="token comment">/** "visible" | "hidden" */</span>\n\n  $<span class="token operator">:</span> document<span class="token punctuation">.</span>title <span class="token operator">=</span> state<span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>VisibilityChange</span> <span class="token attr-name"><span class="token namespace">bind:</span>state</span> <span class="token punctuation">/></span></span>\n',i(t,rn),i(t,un),i(t,dn),i(t,hn),i(t,gn),i(t,kn),kn.innerHTML='<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">import</span> VisibilityChange <span class="token keyword">from</span> <span class="token string">"svelte-visibility-change"</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">let</span> visible<span class="token punctuation">;</span> <span class="token comment">/** boolean */</span>\n  <span class="token keyword">let</span> hidden<span class="token punctuation">;</span> <span class="token comment">/** boolean */</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>VisibilityChange</span> <span class="token attr-name"><span class="token namespace">bind:</span>visible</span> <span class="token attr-name"><span class="token namespace">bind:</span>hidden</span> <span class="token punctuation">/></span></span>\n',i(t,fn),i(t,bn),i(t,vn),i(t,mn),i(t,yn),i(t,$n),P(xn,$n,null),i($n,wn);for(let n=0;n<pt.length;n+=1)pt[n].m($n,null);i(t,Tn),Tn.innerHTML='<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">import</span> VisibilityChange <span class="token keyword">from</span> <span class="token string">"svelte-visibility-change"</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">let</span> events <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>VisibilityChange</span>\n  <span class="token attr-name"><span class="token namespace">on:</span>visible=</span><span class="token language-javascript"><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>events <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>events<span class="token punctuation">,</span> <span class="token string">"on:visible"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n  <span class="token attr-name"><span class="token namespace">on:</span>hidden=</span><span class="token language-javascript"><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>events <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>events<span class="token punctuation">,</span> <span class="token string">"on:hidden"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n<span class="token punctuation">/></span></span>\n\n<span class="token each"><span class="token punctuation">{</span><span class="token keyword">#each</span> <span class="token language-javascript">events </span><span class="token keyword">as</span> <span class="token language-javascript">event<span class="token punctuation">}</span></span></span>\n  <span class="token language-javascript"><span class="token punctuation">{</span>event<span class="token punctuation">}</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>\n<span class="token each"><span class="token punctuation">{</span><span class="token keyword">/each</span><span class="token punctuation">}</span></span>\n',i(t,Ln),i(t,Cn),i(t,Mn),i(t,Hn),i(t,_n),i(t,En),i(t,An),i(t,Pn),Pn.innerHTML='<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>VisibilityChange</span>\n  <span class="token attr-name"><span class="token namespace">on:</span>change=</span><span class="token language-javascript"><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> detail <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>detail<span class="token punctuation">.</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// "visible" | "hidden"</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>detail<span class="token punctuation">.</span>visible<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// boolean</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>detail<span class="token punctuation">.</span>hidden<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// boolean</span>\n  <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n<span class="token punctuation">/></span></span>\n',i(t,Sn),i(t,jn),i(t,In),i(t,Vn),i(t,Nn),i(t,qn),i(t,Dn),i(t,Un),i(t,Fn),i(t,Gn),i(t,On),i(t,Bn),i(t,zn),i(t,Wn),i(t,Yn),i(t,Rn),i(t,Jn),i(t,Kn),i(t,Qn),i(t,Xn),i(t,Zn),i(t,nt),i(t,tt),i(t,st),at=!0},p(n,[t]){const s={};var a;if(!cn&&1&t&&(cn=!0,s.state=n[0],a=()=>cn=!1,y.push(a)),pn.$set(s),2&t){let s;for(it=n[1],s=0;s<it.length;s+=1){const a=D(n,it,s);pt[s]?pt[s].p(a,t):(pt[s]=U(a),pt[s].c(),pt[s].m($n,null))}for(;s<pt.length;s+=1)pt[s].d(1);pt.length=it.length}},i(n){at||(_(pn.$$.fragment,n),_(xn.$$.fragment,n),at=!0)},o(n){E(pn.$$.fragment,n),E(xn.$$.fragment,n),at=!1},d(n){n&&c(t),S(pn),S(xn),function(n,t){for(let s=0;s<n.length;s+=1)n[s]&&n[s].d(t)}(pt,n)}}}function G(n,t,s){let a,e=[];return n.$$.update=()=>{1&n.$$.dirty&&(document.title=a)},[a,e,function(n){a=n,s(0,a)},()=>s(1,e=[...e,"on:visible"]),()=>s(1,e=[...e,"on:hidden"])]}return new class extends V{constructor(n){super(),I(this,n,G,F,o,{})}}({target:document.body})}();
